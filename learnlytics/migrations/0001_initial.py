# Generated by Django 5.2.6 on 2025-10-11 16:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('earlycare', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('badge_type', models.CharField(choices=[('achievement', 'Achievement'), ('participation', 'Participation'), ('improvement', 'Improvement'), ('milestone', 'Milestone'), ('special', 'Special Recognition')], max_length=20)),
                ('icon', models.CharField(help_text='Icon class or image name', max_length=50)),
                ('color', models.CharField(default='#FFD700', help_text='Hex color code', max_length=7)),
                ('points_required', models.IntegerField(default=0, help_text='Points needed to earn this badge')),
                ('activities_required', models.IntegerField(default=0, help_text='Number of activities to complete')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Badge',
                'verbose_name_plural': 'Badges',
                'ordering': ['points_required', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('activity_type', models.CharField(choices=[('reading', 'Reading'), ('writing', 'Writing'), ('math', 'Mathematics'), ('science', 'Science'), ('art', 'Art & Creativity'), ('music', 'Music'), ('physical', 'Physical Activity'), ('social', 'Social Skills'), ('cognitive', 'Cognitive Development'), ('language', 'Language Development')], max_length=20)),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Beginner'), (2, 'Easy'), (3, 'Intermediate'), (4, 'Advanced'), (5, 'Expert')], default=1)),
                ('instructions', models.TextField(help_text='Step-by-step instructions')),
                ('materials_needed', models.TextField(blank=True, help_text='Required materials')),
                ('estimated_duration', models.IntegerField(help_text='Duration in minutes')),
                ('age_range_min', models.IntegerField(help_text='Minimum age in months')),
                ('age_range_max', models.IntegerField(help_text='Maximum age in months')),
                ('learning_objectives', models.TextField(help_text='What children will learn')),
                ('skills_developed', models.TextField(help_text='Skills this activity develops')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='ActivityAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='assigned', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('completion_notes', models.TextField(blank=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='learnlytics.activity')),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_assignments', to=settings.AUTH_USER_MODEL)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_activities', to='earlycare.child')),
            ],
            options={
                'verbose_name': 'Activity Assignment',
                'verbose_name_plural': 'Activity Assignments',
                'ordering': ['-assigned_date'],
                'unique_together': {('child', 'activity')},
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('completion_rate', 'Activity Completion Rate'), ('time_spent', 'Time Spent on Activities'), ('accuracy', 'Accuracy Score'), ('engagement', 'Engagement Level'), ('improvement', 'Improvement Rate'), ('consistency', 'Consistency Score')], max_length=20)),
                ('value', models.FloatField(help_text='Metric value')),
                ('max_value', models.FloatField(default=100, help_text='Maximum possible value')),
                ('period_start', models.DateField(help_text='Start of measurement period')),
                ('period_end', models.DateField(help_text='End of measurement period')),
                ('notes', models.TextField(blank=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learnlytics.activity')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='earlycare.child')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recorded_metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Performance Metric',
                'verbose_name_plural': 'Performance Metrics',
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('child_progress', 'Child Progress Report'), ('class_performance', 'Class Performance Report'), ('activity_analytics', 'Activity Analytics Report'), ('badge_earnings', 'Badge Earnings Report'), ('custom', 'Custom Report')], max_length=30)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('summary', models.TextField(help_text='Executive summary')),
                ('key_findings', models.TextField(help_text='Key findings and insights')),
                ('recommendations', models.TextField(help_text='Recommendations based on data')),
                ('chart_data', models.JSONField(blank=True, help_text='Chart configuration and data', null=True)),
                ('is_exported', models.BooleanField(default=False)),
                ('export_format', models.CharField(blank=True, choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV')], max_length=10)),
                ('export_file', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('child', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='earlycare.child')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='ChildBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_date', models.DateTimeField(auto_now_add=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_badges', to='learnlytics.badge')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_badges', to='earlycare.child')),
                ('earned_for_activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='learnlytics.activityassignment')),
            ],
            options={
                'verbose_name': 'Child Badge',
                'verbose_name_plural': 'Child Badges',
                'ordering': ['-earned_date'],
                'unique_together': {('child', 'badge')},
            },
        ),
    ]
