# Generated by Django 5.2.6 on 2025-10-11 16:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('medical_conditions', models.TextField(blank=True, help_text='Any medical conditions or special needs')),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('emergency_phone', models.CharField(blank=True, max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_children', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Child',
                'verbose_name_plural': 'Children',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_type', models.CharField(choices=[('motor', 'Motor Skills'), ('cognitive', 'Cognitive Development'), ('language', 'Language Development'), ('social', 'Social-Emotional'), ('adaptive', 'Adaptive Behavior'), ('comprehensive', 'Comprehensive Assessment')], max_length=20)),
                ('assessment_date', models.DateField()),
                ('motor_score', models.IntegerField(blank=True, help_text='Motor skills score (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('cognitive_score', models.IntegerField(blank=True, help_text='Cognitive development score (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('language_score', models.IntegerField(blank=True, help_text='Language development score (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('social_score', models.IntegerField(blank=True, help_text='Social-emotional score (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('adaptive_score', models.IntegerField(blank=True, help_text='Adaptive behavior score (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('overall_score', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conducted_assessments', to=settings.AUTH_USER_MODEL)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='earlycare.child')),
            ],
            options={
                'verbose_name': 'Assessment',
                'verbose_name_plural': 'Assessments',
                'ordering': ['-assessment_date'],
            },
        ),
        migrations.CreateModel(
            name='ProgressReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('weekly', 'Weekly Report'), ('monthly', 'Monthly Report'), ('quarterly', 'Quarterly Report'), ('annual', 'Annual Report'), ('custom', 'Custom Report')], max_length=20)),
                ('report_date', models.DateField()),
                ('academic_progress', models.TextField(blank=True)),
                ('social_progress', models.TextField(blank=True)),
                ('behavioral_progress', models.TextField(blank=True)),
                ('physical_progress', models.TextField(blank=True)),
                ('strengths', models.TextField(help_text="Child's strengths and achievements")),
                ('areas_for_improvement', models.TextField(help_text='Areas needing attention')),
                ('recommendations', models.TextField(help_text='Recommendations for continued support')),
                ('teacher_notes', models.TextField(blank=True)),
                ('parent_feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_reports', to='earlycare.child')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Progress Report',
                'verbose_name_plural': 'Progress Reports',
                'ordering': ['-report_date'],
            },
        ),
        migrations.CreateModel(
            name='SupportPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('completed', 'Completed'), ('suspended', 'Suspended')], default='draft', max_length=20)),
                ('goals', models.TextField(help_text='Specific goals for the child')),
                ('strategies', models.TextField(help_text='Strategies to achieve goals')),
                ('resources_needed', models.TextField(blank=True, help_text='Resources and materials needed')),
                ('timeline', models.CharField(blank=True, help_text='Expected timeline', max_length=200)),
                ('review_date', models.DateField(blank=True, null=True)),
                ('next_review', models.DateField(blank=True, null=True)),
                ('progress_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('child', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='support_plan', to='earlycare.child')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_support_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Support Plan',
                'verbose_name_plural': 'Support Plans',
            },
        ),
    ]
